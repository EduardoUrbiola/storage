{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/farouk/Documents/Github/storage/Login.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport formHooks from \"./forms\";\nimport { Text, Input, Button, Stack, Box, Center } from 'native-base';\n\nvar Login = function Login(props) {\n  var handleLogin = props.handleLogin,\n      handleSignup = props.handleSignup,\n      hasAccount = props.hasAccount,\n      setHasAccount = props.setHasAccount,\n      emailError = props.emailError,\n      passwordError = props.passwordError;\n\n  var _formHooks = formHooks(),\n      Controller = _formHooks.Controller,\n      control = _formHooks.control,\n      errors = _formHooks.errors,\n      handleSubmit = _formHooks.handleSubmit;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack, {\n    space: 5,\n    width: '100%',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, React.createElement(Box, {\n    p: 4,\n    _text: {\n      fontSize: 'md',\n      fontWeight: 'bold',\n      color: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, emailError ? React.createElement(Text, {\n    style: (styles.error, {\n      alignSelf: 'center'\n    }),\n    fontSize: \"md\",\n    color: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, emailError) : undefined, emailError ? React.createElement(Text, {\n    fontSize: \"md\",\n    color: \"red\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, emailError) : undefined)), React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    rules: {\n      required: true\n    },\n    render: function render(_ref) {\n      var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          onBlur = _ref$field.onBlur,\n          value = _ref$field.value;\n      return React.createElement(Input, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        color: 'white',\n        variant: \"rounded\",\n        placeholder: \"Email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      });\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), errors.email && React.createElement(Text, {\n    sub: true,\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"This is required.\")), React.createElement(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    rules: {\n      required: true\n    },\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(Input, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        variant: \"rounded\",\n        color: 'white',\n        placeholder: \"Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      });\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), errors.password && React.createElement(Text, {\n    sub: true,\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"This is required.\"))), React.createElement(View, {\n    style: styles.btnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, hasAccount ? React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: handleSubmit(handleLogin),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"Sign in\"), React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Don't have an account?\"), React.createElement(Text, {\n    color: \"white\",\n    fontSize: \"md\",\n    bold: true,\n    onPress: function onPress() {\n      return setHasAccount(!hasAccount);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Sign up\"))) : React.createElement(React.Fragment, null, React.createElement(Button, {\n    onPress: handleSubmit(handleSignup),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), React.createElement(Center, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Have an account?\"), React.createElement(Text, {\n    bold: true,\n    color: \"white\",\n    fontSize: \"md\",\n    onPress: function onPress() {\n      return setHasAccount(!hasAccount);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Sign in\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'center'\n  },\n  loginContainer: {\n    padding: 60,\n    width: '100%',\n    maxWidth: 520,\n    minHeight: 600,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '100%',\n    fontSize: 13,\n    padding: 10,\n    letterSpacing: 1\n  },\n  error: {\n    color: 'red',\n    paddingLeft: 10,\n    fontSize: 11\n  },\n  button: {\n    width: '100%',\n    paddingTop: 15,\n    paddingBottom: 15,\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: 1,\n    backgroundColor: '#603bbb'\n  },\n  btnContainer: {\n    width: '100%',\n    paddingTop: 24,\n    paddingBottom: 24\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/farouk/Documents/Github/storage/Login.js"],"names":["React","formHooks","Text","Input","Button","Stack","Box","Center","Login","props","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","Controller","control","errors","handleSubmit","styles","container","loginContainer","fontSize","fontWeight","color","error","alignSelf","undefined","required","field","onChange","onBlur","value","input","email","password","btnContainer","StyleSheet","create","flex","padding","width","maxWidth","minHeight","flexDirection","justifyContent","letterSpacing","paddingLeft","button","paddingTop","paddingBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TextInput, TouchableOpacity, StyleSheet, Dimensions } from 'react-native';\nimport formHooks from './forms';\nimport { Text, Input, Button, Stack, Box, Center } from 'native-base';\n\nconst Login = (props) => {\n  const { handleLogin, handleSignup, hasAccount, setHasAccount, emailError, passwordError } = props;\n\n  const { Controller, control, errors, handleSubmit } = formHooks();\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.loginContainer}>\n        <Stack space={5} width={'100%'}>\n          <Center>\n            <Box\n              p={4}\n              _text={{\n                fontSize: 'md',\n                fontWeight: 'bold',\n                color: 'white',\n              }}\n            >\n              {emailError ? (\n                <Text style={(styles.error, {alignSelf: 'center'})} fontSize=\"md\" color=\"red\">\n                  {emailError}\n                </Text>\n              ) : undefined}\n              {emailError ? (\n                <Text fontSize=\"md\" color=\"red\">\n                  {emailError}\n                </Text>\n              ) : undefined}\n            </Box>\n          </Center>\n          <Box>\n            <Controller\n              control={control}\n              rules={{\n                required: true,\n              }}\n              render={({ field: { onChange, onBlur, value } }) => (\n                <Input\n                  style={styles.input}\n                  onBlur={onBlur}\n                  onChangeText={onChange}\n                  value={value}\n                  color={'white'}\n                  variant=\"rounded\"\n                  placeholder=\"Email\"\n                />\n              )}\n              name=\"email\"\n              defaultValue=\"\"\n            />\n            {errors.email && (\n              <Text sub style={styles.error}>\n                This is required.\n              </Text>\n            )}\n          </Box>\n\n          <Box>\n            <Controller\n              control={control}\n              rules={{\n                required: true,\n              }}\n              render={({ field: { onChange, onBlur, value } }) => (\n                <Input\n                  style={styles.input}\n                  onBlur={onBlur}\n                  onChangeText={onChange}\n                  value={value}\n                  variant=\"rounded\"\n                  color={'white'}\n                  placeholder=\"Password\"\n                />\n              )}\n              name=\"password\"\n              defaultValue=\"\"\n            />\n            {errors.password && (\n              <Text sub style={styles.error}>\n                This is required.\n              </Text>\n            )}\n          </Box>\n        </Stack>\n\n        <View style={styles.btnContainer}>\n          {hasAccount ? (\n            <>\n              <Button onPress={handleSubmit(handleLogin)}>Sign in</Button>\n              <Center>\n                <Text color=\"white\">Don't have an account?</Text>\n                <Text color=\"white\" fontSize=\"md\" bold onPress={() => setHasAccount(!hasAccount)}>\n                  Sign up\n                </Text>\n              </Center>\n            </>\n          ) : (\n            <>\n              <Button onPress={handleSubmit(handleSignup)}>Sign up</Button>\n              <Center>\n                <Text color=\"white\">Have an account?</Text>\n                <Text bold color=\"white\" fontSize=\"md\" onPress={() => setHasAccount(!hasAccount)}>\n                  Sign in\n                </Text>\n              </Center>\n            </>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignSelf: 'center',\n  },\n  loginContainer: {\n    padding: 60,\n    width: '100%',\n    maxWidth: 520,\n    minHeight: 600,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '100%',\n    fontSize: 13,\n    padding: 10,\n    letterSpacing: 1,\n  },\n  error: {\n    color: 'red',\n    paddingLeft: 10,\n    fontSize: 11,\n  },\n  button: {\n    width: '100%',\n    paddingTop: 15,\n    paddingBottom: 15,\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: 1,\n    backgroundColor: '#603bbb',\n  },\n  btnContainer: {\n    width: '100%',\n    paddingTop: 24,\n    paddingBottom: 24,\n  },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}