{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/farouk/Documents/Github/storage/Login.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport formHooks from \"./forms\";\n\nvar Login = function Login(props) {\n  var handleLogin = props.handleLogin,\n      handleSignup = props.handleSignup,\n      hasAccount = props.hasAccount,\n      setHasAccount = props.setHasAccount;\n\n  var _formHooks = formHooks(),\n      Controller = _formHooks.Controller,\n      control = _formHooks.control,\n      errors = _formHooks.errors,\n      handleSubmit = _formHooks.handleSubmit;\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Controller, {\n    control: control,\n    rules: {\n      required: true\n    },\n    render: function render(_ref) {\n      var _ref$field = _ref.field,\n          onChange = _ref$field.onChange,\n          onBlur = _ref$field.onBlur,\n          value = _ref$field.value;\n      return React.createElement(TextInput, {\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        placeholder: \"Email\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      });\n    },\n    name: \"email\",\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), errors.email && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 26\n    }\n  }, \"This is required.\"), React.createElement(Controller, {\n    control: control,\n    rules: {\n      required: true\n    },\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n      return React.createElement(TextInput, {\n        onBlur: onBlur,\n        onChangeText: onChange,\n        value: value,\n        placeholder: \"Password\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      });\n    },\n    name: \"password\",\n    defaultValue: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), errors.password && React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"This is required.\"), React.createElement(View, {\n    style: styles.btnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, hasAccount ? React.createElement(React.Fragment, null, React.createElement(Button, {\n    title: \"Sign in\",\n    onPress: handleSubmit(handleLogin),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Don't have an account?\"), React.createElement(Text, {\n    onPress: function onPress() {\n      return setHasAccount(!hasAccount);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Sign up\")) : React.createElement(React.Fragment, null, React.createElement(Button, {\n    title: \"Sign up\",\n    onPress: handleSubmit(handleSignup),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"Have an account?\"), React.createElement(Text, {\n    onPress: function onPress() {\n      return setHasAccount(!hasAccount);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Sign in\")))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    minHeight: '100vh',\n    padding: 20,\n    backgroundColor: '#e9e9e9'\n  },\n  loginContainer: {\n    padding: 60,\n    width: '100%',\n    maxWidth: 520,\n    minHeight: 600,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '100%',\n    fontSize: 19,\n    padding: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    color: '#fff',\n    letterSpacing: 1\n  },\n  buttons: {\n    width: '100%',\n    paddingTop: 15,\n    paddingBottom: 15,\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: 1,\n    backgroundColor: '#603bbb'\n  },\n  btnContainer: {\n    width: '100%',\n    paddingTop: 24,\n    paddingBottom: 24\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/home/farouk/Documents/Github/storage/Login.js"],"names":["React","formHooks","Login","props","handleLogin","handleSignup","hasAccount","setHasAccount","Controller","control","errors","handleSubmit","styles","container","loginContainer","required","field","onChange","onBlur","value","email","password","btnContainer","StyleSheet","create","width","minHeight","padding","backgroundColor","maxWidth","flexDirection","justifyContent","input","fontSize","color","letterSpacing","buttons","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TextInput, Button, Alert, StyleSheet, TouchableOpacity } from 'react-native';\nimport formHooks from './forms';\n\nconst Login = (props) => {\n  const { handleLogin, handleSignup, hasAccount, setHasAccount } = props;\n\n  const { Controller, control, errors, handleSubmit } = formHooks();\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.loginContainer}>\n        <Controller\n          control={control}\n          rules={{\n            required: true,\n          }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <TextInput onBlur={onBlur} onChangeText={onChange} value={value} placeholder=\"Email\" />\n          )}\n          name=\"email\"\n          defaultValue=\"\"\n        />\n\n        {errors.email && <Text>This is required.</Text>}\n\n        <Controller\n          control={control}\n          rules={{\n            required: true,\n          }}\n          render={({ field: { onChange, onBlur, value } }) => (\n            <TextInput\n              onBlur={onBlur}\n              onChangeText={onChange}\n              value={value}\n              placeholder=\"Password\"\n            />\n          )}\n          name=\"password\"\n          defaultValue=\"\"\n        />\n\n        {errors.password && <Text>This is required.</Text>}\n\n        <View style={styles.btnContainer}>\n          {hasAccount ? (\n            <>\n              <Button title=\"Sign in\" onPress={handleSubmit(handleLogin)} />\n              <Text>Don't have an account?</Text>\n              <Text onPress={() => setHasAccount(!hasAccount)}>Sign up</Text>\n            </>\n          ) : (\n            <>\n              <Button title=\"Sign up\" onPress={handleSubmit(handleSignup)} />\n              <Text>Have an account?</Text>\n              <Text onPress={() => setHasAccount(!hasAccount)}>Sign in</Text>\n            </>\n          )}\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    minHeight: '100vh',\n    padding: 20,\n    backgroundColor: '#e9e9e9',\n  },\n  loginContainer: {\n    padding: 60,\n    width: '100%',\n    maxWidth: 520,\n    minHeight: 600,\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n\n  input: {\n    width: '100%',\n    fontSize: 19,\n    padding: 10,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    color: '#fff',\n    letterSpacing: 1,\n  },\n  buttons: {\n    width: '100%',\n    paddingTop: 15,\n    paddingBottom: 15,\n    color: '#fff',\n    fontSize: 16,\n    letterSpacing: 1,\n    backgroundColor: '#603bbb',\n  },\n  btnContainer: {\n    width: '100%',\n    paddingTop: 24,\n    paddingBottom: 24,\n  },\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}